<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="info.csoe.dao.ManagerDao">
    <!--  List<Manager> getAllManager(@Param("param") String param,
                                @Param("start") Integer start,
                                @Param("size") Integer size);  -->
    <select id="getAllManager" resultMap="managerAndRoleName">
        SELECT mg_id, mg_name, mg_mobile, mg_email, mg_time, mg_state, role_name
        FROM sp_manager LEFT JOIN sp_role
        ON sp_manager.role_id = sp_role.role_id
        <if test="param != null and param != ''">
            WHERE mg_name LIKE concat('%', #{param}, '%')
        </if>
        LIMIT #{start},#{size}
    </select>
    <resultMap id="managerAndRoleName" type="Manager">
        <id property="mg_id" column="mg_id"></id>
        <result property="mg_name" column="mg_name"></result>
        <result property="mg_mobile" column="mg_mobile"></result>
        <result property="mg_email" column="mg_email"></result>
        <result property="mg_time" column="mg_time"></result>
        <result property="mg_state_o" column="mg_state"></result>
        <result property="role_name" column="role_name"></result>
    </resultMap>

<!--   Integer getAllManagerCount(@Param("query") String query); -->
    <select id="getAllManagerCount" resultType="integer">
        SELECT count(mg_id)
        FROM sp_manager
        <if test="query != null and query != ''">
            WHERE mg_name LIKE concat('%', #{query}, '%')
        </if>
    </select>

<!--    Manager insertOneManager(Manager manager);-->
    <insert id="insertOneManager" useGeneratedKeys="true" keyProperty="mg_id">
        INSERT INTO sp_manager(mg_name, mg_pwd,
        <if test="mg_mobile != null and mg_mobile != ''">
            mg_mobile,
        </if>
        <if test="mg_email != null and mg_email != ''">
            mg_email,
        </if>
         mg_time)
        VALUES
        <trim prefix="(" suffix=")">
            #{mg_name}, #{mg_pwd},
            <if test="mg_mobile != null and mg_mobile != ''">
                #{mg_mobile},
            </if>
            <if test="mg_email != null and mg_email != ''">
                #{mg_email},
            </if>
            #{mg_time}
        </trim>
    </insert>

<!--  Integer updateManagerState(@Param("uid") Integer uid, @Param("state") Integer state);  -->
    <update id="updateManagerState">
        UPDATE sp_manager
        SET mg_state = #{state}
        WHERE mg_id = #{uid}
    </update>

<!--   Manager getOneManagerById(@Param("id") Integer id); -->
    <select id="getOneManagerById" resultMap="oneManager">
        SELECT mg_id, role_id, mg_name, mg_mobile, mg_email, mg_state
        FROM sp_manager
        WHERE mg_id = #{id}
    </select>
    <resultMap id="oneManager" type="Manager">
        <id property="mg_id" column="mg_id"></id>
        <result property="role_id" column="role_id"></result>
        <result property="mg_name" column="mg_name"></result>
        <result property="mg_mobile" column="mg_mobile"></result>
        <result property="mg_email" column="mg_email"></result>
        <result property="mg_state_o" column="mg_state"></result>
    </resultMap>

<!--   Manager updateManager(@Param("id") Integer id, @Param("email") String email, @Param("mobile") String mobile); -->
    <update id="updateManager">
        UPDATE sp_manager
        SET
        <if test="email != null and email != ''">
            mg_email = #{email}
        </if>
        <if test="mobile != null and mobile != ''">
            ,mg_mobile = #{mobile}
        </if>
        WHERE mg_id = #{id}
    </update>

<!--  Integer deleteManagerById(@Param("id") Integer id);  -->
    <delete id="deleteManagerById">
        DELETE FROM sp_manager
        WHERE mg_id = #{id}
    </delete>

<!--  Integer assignRoleById(@Param("id") Integer id,
                           @Param("role_id") Integer role_id);  -->
    <update id="assignRoleById">
        UPDATE sp_manager
        SET role_id = #{role_id}
        WHERE mg_id = #{id}
    </update>

<!--  Integer login(Login login); -->
    <select id="login" resultType="integer">
        SELECT mg_id
        FROM sp_manager
        WHERE mg_name = #{username} AND mg_pwd = #{password}
        LIMIT 1
    </select>
</mapper>